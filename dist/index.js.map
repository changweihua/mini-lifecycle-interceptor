{"version":3,"sources":["/Users/yangger/WebstormProjects/outbag/yangger/mini-lifecycle-interceptor/src/utils/index.ts","/Users/yangger/WebstormProjects/outbag/yangger/mini-lifecycle-interceptor/src/core/InterceptorManager.ts","/Users/yangger/WebstormProjects/outbag/yangger/mini-lifecycle-interceptor/src/utils/wxCompose.ts","/Users/yangger/WebstormProjects/outbag/yangger/mini-lifecycle-interceptor/src/core/overwriteMiniLifeCycle.ts","/Users/yangger/WebstormProjects/outbag/yangger/mini-lifecycle-interceptor/src/index.ts"],"sourcesContent":["import { IHandle } from './wxCompose'\n\n/**\n * 把拦截器方法变成数组\n * @param handles {IHandle | Array<IHandle>>} - 拦截器传入的方法或者数组\n * @returns handles {Array<Handle>} - 拦截器方法数组\n */\nexport const handleToList = <T>(handles: IHandle<T> | Array<IHandle<T>>): Array<IHandle<T>> => {\n  if (handles instanceof Array) {\n    return handles\n  }\n  return [handles]\n}\n\nexport const compareVersion = (version1: string, version2: string) => {\n  if (version1 === version2) {\n    return 0\n  }\n  const a_components = version1.split('.')\n  const b_components = version2.split('.')\n  const len = Math.min(a_components.length, b_components.length)\n  // loop while the components are equal\n  for (let i = 0; i < len; i++) {\n    // A bigger than B\n    if (parseInt(a_components[i]) > parseInt(b_components[i])) {\n      return 1\n    }\n    // B bigger than A\n    if (parseInt(a_components[i]) < parseInt(b_components[i])) {\n      return -1\n    }\n  }\n  // If one's a prefix of the other, the longer one is greater.\n  if (a_components.length > b_components.length) {\n    return 1\n  }\n  if (a_components.length < b_components.length) {\n    return -1\n  }\n  // Otherwise they are the same.\n  return 0\n}\n","import { handleToList } from '../utils'\nimport { IHandle } from '../utils/wxCompose'\n\n/**\n * 小程序页面的生命周期钩子集合\n * @description 官网 - https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page-life-cycle.html\n */\nexport const miniPageLifeCycle = {\n  onReady: 'onReady',\n  onShow: 'onShow',\n  onHide: 'onHide',\n  onLoad: 'onLoad',\n  onUnload: 'onUnload',\n}\n\n/**\n * 自定义组件的生命周期钩子集合\n * @description 官网 - https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/lifetimes.html\n */\nexport const miniComponentLifeCycle = {\n  created: 'created',\n  attached: 'attached',\n  ready: 'ready',\n  detached: 'detached',\n  moved: 'moved',\n  error: 'error',\n}\n\n// 容器类型\nexport type IWrapperType = 'Page' | 'Component'\n// 小程序内所有生命周期钩子\nexport type IMiniLifeCycleKey = keyof typeof miniPageLifeCycle | keyof typeof miniComponentLifeCycle\n\n/**\n * 原型是否为小程序的生命周期的原型\n * @param prototype {string} - 传入的原型key\n */\nexport const isLifeCyclePrototype = (prototype: string): boolean => {\n  if (Object.hasOwnProperty.call(miniPageLifeCycle, prototype)) {\n    return true\n  }\n  if (Object.hasOwnProperty.call(miniComponentLifeCycle, prototype)) {\n    return true\n  }\n  return false\n}\n\nexport default class InterceptorManager {\n  // 生命周期方法运行前的方法\n  useHandles: Array<IHandle<any>> = []\n\n  // 生命周期方法运行后的方法\n  useAfterHandles: Array<IHandle<any>> = []\n\n  // 当前容器的类型\n  wrapperType: IWrapperType | null\n\n  // 当前拦截的生命周期名\n  lifeCycleType: IMiniLifeCycleKey | null\n\n  // 是否被销毁\n  isDestroy = false\n\n  constructor(lifeCycleType: IMiniLifeCycleKey) {\n    // 如果是Page\n    if (Object.hasOwnProperty.call(miniPageLifeCycle, lifeCycleType)) {\n      this.wrapperType = 'Page'\n      this.lifeCycleType = lifeCycleType\n      return\n    }\n    // 如果是组件\n    if (Object.hasOwnProperty.call(miniComponentLifeCycle, lifeCycleType)) {\n      this.wrapperType = 'Component'\n      this.lifeCycleType = lifeCycleType\n      return\n    }\n    this.wrapperType = null\n    this.lifeCycleType = null\n  }\n\n  // 拦截器加入方法\n  use<T>(handles: IHandle<T> | Array<IHandle<T>>) {\n    if (!this.lifeCycleType) {\n      return this.errorTip(0)\n    }\n    this.isDestroy = false\n    this.useHandles = this.useHandles.concat(handleToList<T>(handles))\n  }\n\n  // 拦截器加入方法\n  useAfter<T>(handles: IHandle<T> | Array<IHandle<T>>) {\n    if (!this.lifeCycleType) {\n      return this.errorTip(0)\n    }\n    this.isDestroy = false\n    this.useAfterHandles = this.useAfterHandles.concat(handleToList<T>(handles))\n  }\n\n  // 销毁\n  destroy() {\n    this.useHandles = []\n    this.useAfterHandles = []\n    this.isDestroy = true\n    console.log('已经卸载')\n  }\n\n  // 重置\n  reset() {\n    this.useHandles = []\n    this.useAfterHandles = []\n    this.isDestroy = false\n    console.log('已经重置')\n  }\n\n  // 错误提示\n  errorTip(errorType: number) {\n    if (errorType === 0) {\n      console.error('暂不支持小程序自带的生命周期之外的钩子')\n    }\n  }\n}\n","export type INextHandle = () => Promise<any>\nexport type IHandle<T> = (options: T, next: INextHandle) => any\nexport type IComposeHandle<T> = (options: T, next?: INextHandle) => Promise<void>\n\n/**\n * 仿照koa-compose，连接拦截器方法数组\n * @param handles {Array<IHandle>>} - 拦截器方法数组\n * @returns composeHandles {IComposeHandle} - 连接好小程序原生生命周期方法后的数组\n */\nexport default function wxCompose<T>(handles: Array<IHandle<T>>): IComposeHandle<T> {\n  return function (this: any, options, next) {\n    const wxThis = this\n    // last called handle #\n    let index = -1\n    function dispatch(i: number): Promise<void> {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = handles[i]\n      if (i === handles.length) {\n        fn = next as IHandle<T>\n      }\n      if (!fn) return Promise.resolve()\n      try {\n        return fn.call(wxThis, options, dispatch.bind(null, i + 1))\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n    return dispatch(0)\n  }\n}\n","import InterceptorManager, { IMiniLifeCycleKey, miniComponentLifeCycle, miniPageLifeCycle } from './InterceptorManager'\nimport wxCompose, { INextHandle } from '../utils/wxCompose'\nimport { IMiniLifeCycle } from '..'\nimport { compareVersion } from '../utils'\n\n/**\n * 覆盖写入小程序Page方法\n * @param options - 小程序传入的参数\n */\nexport function overwritePage(this: IMiniLifeCycle, options: any) {\n  const miniLifeCycleInstance = this\n  Object.keys(miniPageLifeCycle).forEach((pageLifeCycleKey) => {\n    // 小程序生命周期原来的方法\n    const originLifeCycleFunction = options[pageLifeCycleKey]\n    // 包装\n    options[pageLifeCycleKey] = function (...args: any) {\n      // 小程序生命周期内的上下文\n      const miniContext = this\n      // 如果写了拦截器\n      if (\n        miniLifeCycleInstance.interceptors &&\n        Object.hasOwnProperty.call(miniLifeCycleInstance.interceptors, pageLifeCycleKey)\n      ) {\n        const { useHandles, useAfterHandles }: InterceptorManager =\n          miniLifeCycleInstance.interceptors[pageLifeCycleKey as IMiniLifeCycleKey]\n        // 包装页面的生命周期函数\n        const wrapperFn = <T>(options: T, next: INextHandle): void => {\n          originLifeCycleFunction.call(miniContext, options)\n          next()\n        }\n        return wxCompose([...useHandles, wrapperFn, ...useAfterHandles]).apply(miniContext, args)\n      } else {\n        // 返回本身\n        return originLifeCycleFunction.apply(miniContext, args)\n      }\n    }\n  })\n  return miniLifeCycleInstance.originPage(options)\n}\n\nexport function overwriteComponent(this: IMiniLifeCycle, options: any) {\n  const miniLifeCycleInstance = this\n  Object.keys(miniComponentLifeCycle).forEach((componentLifeCycleKey) => {\n    let optionsOrLifeTimes: any\n    // 微信小程序特殊处理\n    if (miniLifeCycleInstance.env === 'weapp') {\n      // 自小程序基础库版本 2.2.3 起，组件的的生命周期也可以在 lifetimes 字段内进行声明（这是推荐的方式，其优先级最高）\n      const currentVersion = (wx as any)?.version?.version\n      if (compareVersion(currentVersion, '2.2.3') >= 0) {\n        // 所以这里要对 lifetimes 做适配\n        if (!options.lifetimes) {\n          options.lifetimes = {}\n        }\n        // 写入原生方法\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        options.lifetimes[componentLifeCycleKey] = options[componentLifeCycleKey] || function () {}\n        // 防止重复调用\n        // delete options[componentLifeCycleKey]\n        optionsOrLifeTimes = options.lifetimes\n      }\n    } else {\n      optionsOrLifeTimes = options\n    }\n    // 原来的生命周期的方法\n    const originLifeCycleFunction = options[componentLifeCycleKey]\n    // 设置新的生命周期方法\n    optionsOrLifeTimes[componentLifeCycleKey] = function (...args: any) {\n      // 小程序生命周期内的上下文\n      const miniContext = this\n      // 如果有拦截器\n      if (\n        miniLifeCycleInstance.interceptors &&\n        Object.hasOwnProperty.call(miniLifeCycleInstance.interceptors, componentLifeCycleKey)\n      ) {\n        const { useHandles, useAfterHandles }: InterceptorManager =\n          miniLifeCycleInstance.interceptors[componentLifeCycleKey as IMiniLifeCycleKey]\n        // 包装页面的生命周期函数\n        const wrapperFn = <T>(options: T, next: INextHandle): void => {\n          originLifeCycleFunction.call(miniContext, options)\n          next()\n        }\n        return wxCompose([...useHandles, wrapperFn, ...useAfterHandles]).apply(miniContext, args)\n      } else {\n        // 返回本身\n        return originLifeCycleFunction.apply(miniContext, args)\n      }\n    }\n  })\n  return miniLifeCycleInstance.originPage(options)\n}\n","import InterceptorManager, { IMiniLifeCycleKey, isLifeCyclePrototype } from './core/InterceptorManager'\nimport { overwriteComponent, overwritePage } from './core/overwriteMiniLifeCycle'\nexport type APP_ENV = 'weapp' | 'alipay'\n\nexport interface IMiniLifeCycle {\n  env: APP_ENV\n  originPage: any\n  originComponent: any\n  interceptors?: {\n    [key in IMiniLifeCycleKey]: InterceptorManager\n  }\n  create: (env: APP_ENV) => void\n  init: () => void\n  addInterceptors: () => void\n}\n\nclass MiniLifeCycle implements IMiniLifeCycle {\n  env: APP_ENV\n\n  originPage: any\n\n  originComponent: any\n\n  interceptors?: {\n    [key in IMiniLifeCycleKey]: InterceptorManager\n  }\n\n  constructor() {\n    try {\n      this.originPage = Page\n      this.originComponent = Component\n    } catch (e) {\n      console.error('绑定小程序原生方法Page、Component异常:\\t', e)\n    }\n    this.env = 'weapp'\n    this.init()\n    this.addInterceptors()\n  }\n\n  /**\n   * TODO 区别平台做不同的适配\n   * 创建 区分运行平台或者传入配置项\n   * @param env\n   */\n  create(env: APP_ENV) {\n    this.env = env\n  }\n\n  /**\n   * 初始化拦截器\n   */\n  init() {\n    this.interceptors = new Proxy(\n      {},\n      {\n        get(target: any, prototypeText: IMiniLifeCycleKey): any {\n          if (isLifeCyclePrototype(prototypeText) && !target[prototypeText]) {\n            target[prototypeText] = new InterceptorManager(prototypeText)\n          }\n          return target[prototypeText]\n        },\n      },\n    ) as {\n      [key in IMiniLifeCycleKey]: InterceptorManager\n    }\n  }\n\n  /**\n   * 给小程序的Page、Component注入拦截器\n   */\n  addInterceptors() {\n    Page = overwritePage.bind(this)\n    Component = overwriteComponent.bind(this)\n  }\n}\n\nexport default new MiniLifeCycle()\n"],"names":[],"mappings":"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"}