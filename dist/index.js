import InterceptorManager,{isLifeCyclePrototype}from'./core/InterceptorManager';
import {overwriteComponent,overwritePage}from'./core/overwriteMiniLifeCycle';
class MiniLifeCycle{create(env){this.env=env;}init(){this.interceptors=new Proxy({},{get(target,prototypeText){if(isLifeCyclePrototype(prototypeText)&& !target[prototypeText]){target[prototypeText]=new InterceptorManager(prototypeText);}return target[prototypeText];}});}addInterceptors(){Page=overwritePage.bind(this);Component=overwriteComponent.bind(this);}constructor(){try{this.originPage=Page;this.originComponent=Component;}catch(e) {console.error('绑定小程序原生方法Page、Component异常:\t',e);}this.env='weapp';this.init();this.addInterceptors();}}export default new MiniLifeCycle();
