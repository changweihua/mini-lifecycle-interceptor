import {miniComponentLifeCycle,miniPageLifeCycle}from'./InterceptorManager';
import wxCompose from'../utils/wxCompose';
import {compareVersion}from'../utils/index';
export function overwritePage(options){const miniLifeCycleInstance=this;Object.keys(miniPageLifeCycle).forEach(pageLifeCycleKey=>{const originLifeCycleFunction=options[pageLifeCycleKey];options[pageLifeCycleKey]=function(...args){const miniContext=this;if(miniLifeCycleInstance.interceptors&&Object.hasOwnProperty.call(miniLifeCycleInstance.interceptors,pageLifeCycleKey)){const {useHandles,useAfterHandles}=miniLifeCycleInstance.interceptors[pageLifeCycleKey];const wrapperFn=(options1,next)=>{if(originLifeCycleFunction){originLifeCycleFunction.call(miniContext,options1);}next();};return wxCompose([...useHandles,wrapperFn,...useAfterHandles]).apply(miniContext,args);}else{if(originLifeCycleFunction){return originLifeCycleFunction.apply(miniContext,args);}}};});return miniLifeCycleInstance.originPage(options);}
export function overwriteComponent(options){const miniLifeCycleInstance=this;let needOverwriteLifetimes=false;let optionsOrLifeTimes;if(miniLifeCycleInstance.env==='weapp'){var ref,ref1;const currentVersion=(ref=wx)===null||ref=== void 0?void 0:(ref1=ref.version)===null||ref1=== void 0?void 0:ref1.version;if(compareVersion(currentVersion,'2.2.3')>=0){if(!options.lifetimes){options.lifetimes={};}needOverwriteLifetimes=true;optionsOrLifeTimes=options.lifetimes;}}else{optionsOrLifeTimes=options;}Object.keys(miniComponentLifeCycle).forEach(componentLifeCycleKey=>{if(needOverwriteLifetimes){optionsOrLifeTimes[componentLifeCycleKey]=optionsOrLifeTimes[componentLifeCycleKey]||function(){};delete options[componentLifeCycleKey];}const originLifeCycleFunction=optionsOrLifeTimes[componentLifeCycleKey];optionsOrLifeTimes[componentLifeCycleKey]=function(...args){const miniContext=this;if(miniLifeCycleInstance.interceptors&&Object.hasOwnProperty.call(miniLifeCycleInstance.interceptors,componentLifeCycleKey)){const {useHandles,useAfterHandles}=miniLifeCycleInstance.interceptors[componentLifeCycleKey];const wrapperFn=(options1,next)=>{if(originLifeCycleFunction){originLifeCycleFunction.call(miniContext,options1);}next();};return wxCompose([...useHandles,wrapperFn,...useAfterHandles]).apply(miniContext,args);}else{if(originLifeCycleFunction){return originLifeCycleFunction.apply(miniContext,args);}}};});return miniLifeCycleInstance.originComponent(options);}
