import {handleToList}from'../utils/index';
export const miniPageLifeCycle={onLaunch:'onLaunch',onReady:'onReady',onShow:'onShow',onHide:'onHide',onLoad:'onLoad',onUnload:'onUnload'};
export const miniComponentLifeCycle={created:'created',attached:'attached',ready:'ready',detached:'detached',moved:'moved',error:'error'};
export const isLifeCyclePrototype=prototype=>{if(Object.hasOwnProperty.call(miniPageLifeCycle,prototype)){return true;}if(Object.hasOwnProperty.call(miniComponentLifeCycle,prototype)){return true;}return false;};
class InterceptorManager{use(handles){if(!this.lifeCycleType){return this.errorTip(0);}this.isDestroy=false;this.useHandles=this.useHandles.concat(handleToList(handles));}useAfter(handles){if(!this.lifeCycleType){return this.errorTip(0);}this.isDestroy=false;this.useAfterHandles=this.useAfterHandles.concat(handleToList(handles));}destroy(){this.useHandles=[];this.useAfterHandles=[];this.isDestroy=true;console.log('已经卸载');}reset(){this.useHandles=[];this.useAfterHandles=[];this.isDestroy=false;console.log('已经重置');}errorTip(errorType){if(errorType===0){console.error('暂不支持小程序自带的生命周期之外的钩子');}}constructor(lifeCycleType){this.useHandles=[];this.useAfterHandles=[];this.isDestroy=false;if(Object.hasOwnProperty.call(miniPageLifeCycle,lifeCycleType)){this.wrapperType='Page';this.lifeCycleType=lifeCycleType;return;}if(Object.hasOwnProperty.call(miniComponentLifeCycle,lifeCycleType)){this.wrapperType='Component';this.lifeCycleType=lifeCycleType;return;}this.wrapperType=null;this.lifeCycleType=null;}}export{InterceptorManager as default};
